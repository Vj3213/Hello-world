
import java.util.Scanner;
import javax.swing.*;
import java.awt.event.*;
import java.awt.*;

public class calci
{
	 static public  void main(String args[])
	{
		graphics gp = new graphics();
		gp.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		gp.setLocation(700,100);
		gp.setSize(250,400);
		gp.setVisible(true);
		gp.setResizable(false);
	}
}

class graphics extends JFrame
{
	private JButton one,two,three,four,five,six,seven,eight,nine,zero,plus,minus,multiply,divide,remainder,equal,decimal,clear;
	JPanel panel,keypad;
	JTextField screen;
	int b =0;
	int ch=0;
	public graphics()
	{	
		setTitle("CALCULATOR");
		panel  = new JPanel(new GridLayout(2,1));
		add(panel);
		screen = new JTextField();
		screen.setHorizontalAlignment(screen.RIGHT);
		screen.setBounds(100,100,100,100);
		screen.setFont(new Font("Serif",Font.PLAIN,20));
		screen.setBackground(new Color(240,240,255));
		panel.add(screen);
	
		keypad = new JPanel();
		keypad.setBackground(new Color(240,210,80));
		panel.add(keypad);
		GridLayout layout = new GridLayout(0,3,1,1);
		keypad.setLayout(layout);
		one = new JButton("1");
		keypad.add(one);
		two = new JButton("2");
		keypad.add(two);
		three = new JButton("3");
		keypad.add(three);
		four = new JButton("4");
		keypad.add(four);
		five = new JButton("5");
		keypad.add(five);
		six = new JButton("6");
		keypad.add(six);
		seven = new JButton("7");
		keypad.add(seven);
		eight = new JButton("8");
		keypad.add(eight);
		nine = new JButton("9");
		keypad.add(nine);
		plus = new JButton("+");
		keypad.add(plus);
		zero = new JButton("0");
		keypad.add(zero);
		minus = new JButton("-");
		keypad.add(minus);
		divide = new JButton("/");
		keypad.add(divide);
		multiply = new JButton("X");
		keypad.add(multiply);
		equal = new JButton("=");
		keypad.add(equal);
		decimal  = new JButton(".");
		keypad.add(decimal);
		remainder = new JButton("%");
		keypad.add(remainder);
		clear = new JButton("C");
		keypad.add(clear);
			
		Handlerclass handler = new Handlerclass();
		equal.addActionListener(handler);
		one.addActionListener(handler);
		two.addActionListener(handler);
		three.addActionListener(handler);
		four.addActionListener(handler);
		five.addActionListener(handler);
		six.addActionListener(handler);
		seven.addActionListener(handler);
		eight.addActionListener(handler);
		nine.addActionListener(handler);
		zero.addActionListener(handler);
		plus.addActionListener(handler);
		minus.addActionListener(handler);
		divide.addActionListener(handler);
		multiply.addActionListener(handler);
		remainder.addActionListener(handler);
		decimal.addActionListener(handler);
		clear.addActionListener(handler);
	}

	class Handlerclass implements ActionListener 
	{	
		public void actionPerformed(ActionEvent event) 
		{	
			int i,j,l,m,q,t,s;
			int len = 0,len2 = 0,count = 0,countOpt = 0;	
			String str;
			
			if(event.getActionCommand() == "1")
			{
				screen.setText(screen.getText()+"1");	
			}
			else if(event.getActionCommand() == "2")
			{
				screen.setText(screen.getText()+"2");					
			}
			else if(event.getActionCommand() == "3")
			{
				screen.setText(screen.getText()+"3");				
			}
			else if(event.getActionCommand() == "4")
			{
				screen.setText(screen.getText()+"4");					
			}
			else if(event.getActionCommand() == "5")
			{
				screen.setText(screen.getText()+"5");				
			}
			else if(event.getActionCommand() == "6")
			{
				screen.setText(screen.getText()+"6");					
			}
			else if(event.getActionCommand() =="7")
			{
				screen.setText(screen.getText()+"7");					
			}	
			else if(event.getActionCommand() == "8")
			{
				screen.setText(screen.getText()+"8");					
			}	
			else if(event.getActionCommand() == "9")
			{
				screen.setText(screen.getText()+"9");				
			}
			else if(event.getActionCommand() == "0")
			{
				screen.setText(screen.getText()+"0");					
			}
			else if(event.getActionCommand() == "+")
			{
				screen.setText(screen.getText()+"+");					
			}
			else if(event.getActionCommand() == "-")
			{
				screen.setText(screen.getText()+"-");			
			}
			else if(event.getActionCommand() == "X")
			{
				screen.setText(screen.getText()+"X");	
			}
			else if(event.getActionCommand() == "%")
			{
				screen.setText(screen.getText()+"%");						
			}	
			else if(event.getActionCommand() == "/")
			{
				screen.setText(screen.getText()+"/");			
			}
			else if(event.getActionCommand() == ".")	
			{
				JOptionPane.showMessageDialog(null,"Do not use decimal option for now. \n Thank You!");
			}
			else if(event.getActionCommand() == "C")
			{
				screen.setText("");
			}

			str = screen.getText();
			
			for(l=0;l<str.length();l++)
			{	
				String c = Character.toString(str.charAt(l));
				if(c.equals( "+") || c.equals( "-") || c.equals("X") || c.equals("%") || c.equals("/"))
				{
					countOpt++;
				}
			}

			String b[] = new String[str.length()];
			int digit[] = new int[str.length()];
			String operator[] = new String[countOpt];
			int number[] = new int[countOpt + 1];
			
			if(event.getActionCommand() == "=")
			{	
				for(i=0;i<(countOpt + 1);i++)
				{	
					for(j=count;j<str.length();j++)
					{
						b[j] = Character.toString(str.charAt(j));
						count++;
	//dont use (==) bcoz String is a class not a primitive expression since it contains methods like charAt(),subString methods etc, so for  comparison of string always use equals() method
						if(b[j].equals("+") || b[j].equals("-") || b[j].equals("/") || b[j].equals("%") || b[j].equals("X"))	
						{	
							operator[i] = b[j];
							break;
						}
						else 
						{
							 digit[j] = Integer.parseInt(b[j]);
						}
					}

					len = j;
					for(int k=len2;k<len;k++)
					{					
						number[i] = number[i] + digit[k]*(int)Math.pow(10,len-(k+1));
						len2 = k+1;
					}
				}
				
				for(m=0;m<countOpt;m++)
				{
					if(operator[m].equals("X"))
					{	
						number[m]  = number[m] * number[m+1];
						
						for(int n=m+1;n<=countOpt;n++)
						{ 
							if(n != countOpt)
							{
								number[n] = number[n+1];
							}
							else
							{
								number[n] = 0;
							}
						}

						for(int p=m;p<countOpt;p++)
						{
							if(p != (countOpt-1))
							{
								operator[p] = operator[p+1];
							}
							else
							{
								operator[p] = "+";
							}
						}
						m--;
					}
					
				}
				
				for(q=0;q<countOpt;q++)
				{
					if(operator[q].equals("/"))
					{	
						number[q]  = number[q] / number[q+1];
						
						for(int n=q+1;n<=countOpt;n++)
						{ 
							if(n != countOpt)
							{
								number[n] = number[n+1];
							}
							else
							{
								number[n] = 0;
							}
						}

						for(int p=q;p<countOpt;p++)
						{
							if(p != (countOpt-1))
							{
								operator[p] = operator[p+1];
							}
							else
							{
								operator[p] = "+";
							}
						}
						q--;
					}
				}

				for(t=0;t<countOpt;t++)
				{
					if(operator[t].equals("%"))
					{	
						number[t]  = number[t] % number[t+1];
						
						for(int n=t+1;n<=countOpt;n++)
						{ 
							if(n != countOpt)
							{
								number[n] = number[n+1];
							}
							else
							{
								number[n] = 0;
							}
						}

						for(int p=t;p<countOpt;p++)
						{
							if(p != (countOpt-1))
							{
								operator[p] = operator[p+1];
							}
							else
							{
								operator[p] = "+";
							}
						}
						t--;
					}
					
				}

				int Result = number[0];
				for(s=0;s<countOpt;s++)
				{	
					if(operator[s].equals("+"))
					{
						Result = Result + number[s+1];
					}
					else if(operator[s].equals("-"))
					{
						Result = Result - number[s+1];
					}
				}
				screen.setText(str + "\n = "+ Integer.toString(Result));
			}	
			
		}			
	}	
}
